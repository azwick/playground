{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/setting-up-toolchain/pages/UseStateCondition.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nvar inputElement = function inputElement() {\n  _s();\n\n  var randomBoolean = Math.random() >= 0.5;\n\n  var _useState = useState(randomBoolean === true),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 2000);\n  });\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 22\n  }, _this) : /*#__PURE__*/_jsxDEV(\"input\", {\n    placeholder: \"Enter some text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 46\n  }, _this);\n};\n\n_s(inputElement, \"hw2JVSbTfRrZce659Euz7jutx3Y=\");\n\nexport default inputElement;","map":{"version":3,"sources":["/Users/Anne/Documents/playground/setting-up-toolchain/pages/UseStateCondition.js"],"names":["React","useEffect","useState","inputElement","randomBoolean","Math","random","isLoading","setIsLoading","setTimeout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,aAAa,GAAGC,IAAI,CAACC,MAAL,MAAiB,GAAvC;;AADyB,kBAESJ,QAAQ,CAACE,aAAa,KAAK,IAAnB,CAFjB;AAAA,MAElBG,SAFkB;AAAA,MAEPC,YAFO;;AAIzBP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAER,IAFQ,CAAV;AAGD,GAJQ,CAAT;AAMA,SAAOD,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH,gBAA2B;AAAO,IAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,WAA3C;AACD,CAXD;;GAAMJ,Y;;AAaN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst inputElement = () => {\n  const randomBoolean = Math.random() >= 0.5;\n  const [isLoading, setIsLoading] = useState(randomBoolean === true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false)\n    },2000);\n  })\n\n  return isLoading ? <div>Loading...</div> : <input placeholder=\"Enter some text\" />;\n}\n\nexport default inputElement;"]},"metadata":{},"sourceType":"module"}