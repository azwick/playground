{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/setting-up-toolchain/pages/ImageToggleOnScroll.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\n\nvar ToggleImg = function ToggleImg(_ref) {\n  _s();\n\n  var primaryImg = _ref.primaryImg,\n      secondaryImg = _ref.secondaryImg;\n  var imageRef = useRef(null); // Code magic for finding out which img is in the middle of the view\n\n  var isInView = function isInView() {\n    var rect = imageRef.current.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  };\n\n  var _useState = useState(false),\n      inView = _useState[0],\n      setInView = _useState[1]; // False defines the default value = no img is by default in the view\n\n\n  useEffect(function () {\n    setInView(isInView()); // Sets the first img in view \n\n    window.addEventListener(\"scroll\", scrollHandler);\n    return function () {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []); // Only run when the component is first rendered = []\n  // Everytime of scrolling, this will be called again\n\n  var scrollHandler = function scrollHandler() {\n    setInView(isInView());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    width: \"400\",\n    alt: \"\",\n    ref: imageRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ToggleImg, \"UYW9FcHyGk33g1TWtearVnAtnLg=\");\n\n_c = ToggleImg;\n\nvar ImageToggleOnScroll = function ImageToggleOnScroll() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [1, 2, 3, 4, 5, 6].map(function (myId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ToggleImg, {\n          primaryImg: \"/static/bw/pic-0\".concat(myId, \".jpg\"),\n          secondaryImg: \"/static/ori/pic-0\".concat(myId, \".jpg\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, _this)\n      }, myId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = ImageToggleOnScroll;\nexport default ImageToggleOnScroll;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleImg\");\n$RefreshReg$(_c2, \"ImageToggleOnScroll\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/setting-up-toolchain/pages/ImageToggleOnScroll.js"],"names":["React","useEffect","useRef","useState","ToggleImg","primaryImg","secondaryImg","imageRef","isInView","rect","current","getBoundingClientRect","top","bottom","window","innerHeight","inView","setInView","addEventListener","scrollHandler","removeEventListener","ImageToggleOnScroll","map","myId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAgC;AAAA;;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;AAChD,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB,CADgD,CAGhD;;AACA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,IAAI,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,qBAAjB,EAAb;AACA,WAAOF,IAAI,CAACG,GAAL,IAAY,CAAZ,IAAiBH,IAAI,CAACI,MAAL,IAAeC,MAAM,CAACC,WAA9C;AACD,GAHD;;AAJgD,kBASrBZ,QAAQ,CAAC,KAAD,CATa;AAAA,MASzCa,MATyC;AAAA,MASlCC,SATkC,iBASJ;;;AAE5ChB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,SAAS,CAACT,QAAQ,EAAT,CAAT,CADc,CACS;;AACvBM,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAO,YAAM;AACXL,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACD,KAFD;AAGD,GANQ,EAMP,EANO,CAAT,CAXgD,CAiBzC;AAGP;;AACA,MAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBF,IAAAA,SAAS,CAACT,QAAQ,EAAT,CAAT;AACH,GAFD;;AAIA,sBACE;AACE,IAAA,GAAG,EAAEQ,MAAM,GAAGV,YAAH,GAAkBD,UAD/B;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,GAAG,EAAC,EAHN;AAGS,IAAA,GAAG,EAAEE;AAHd;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAhCD;;GAAMH,S;;KAAAA,S;;AAkCN,IAAMiB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,sBACE;AAAA,cACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBC,GAAnB,CAAuB,UAACC,IAAD,EAAU;AAChC,0BACE;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,UAAU,4BAAqBA,IAArB,SADZ;AAEE,UAAA,YAAY,6BAAsBA,IAAtB;AAFd;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,eADF;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAfD;;MAAMF,mB;AAiBN,eAAeA,mBAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\n\nconst ToggleImg = ({primaryImg, secondaryImg}) => {\n  const imageRef = useRef(null);\n\n  // Code magic for finding out which img is in the middle of the view\n  const isInView = () => {\n    const rect = imageRef.current.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  }\n\n  const [inView,setInView] = useState(false); // False defines the default value = no img is by default in the view\n\n  useEffect(() => {\n    setInView(isInView()); // Sets the first img in view \n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  },[]); // Only run when the component is first rendered = []\n\n\n  // Everytime of scrolling, this will be called again\n  const scrollHandler = () => {\n      setInView(isInView());\n  };\n\n  return (\n    <img \n      src={inView ? secondaryImg : primaryImg}\n      width=\"400\" \n      alt=\"\" ref={imageRef}\n    />\n  );\n};\n\nconst ImageToggleOnScroll = () => {\n  return (\n    <div>\n      {[1, 2, 3, 4, 5, 6].map((myId) => {\n        return (\n          <div key={myId}>\n            <ToggleImg \n              primaryImg={`/static/bw/pic-0${myId}.jpg`}\n              secondaryImg={`/static/ori/pic-0${myId}.jpg`}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ImageToggleOnScroll;"]},"metadata":{},"sourceType":"module"}